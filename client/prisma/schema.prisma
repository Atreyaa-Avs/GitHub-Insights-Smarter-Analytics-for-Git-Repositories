generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Repo {
  id               BigInt    @id @default(autoincrement())
  owner            String
  name             String
  description      String?
  visibility       String?
  default_branch   String?
  created_at       DateTime?
  updated_at       DateTime?
  pushed_at        DateTime?
  avatar_url       String?
  html_url         String?

  // Overview counters used by the page
  stargazers_count Int       @default(0)
  watchers_count   Int       @default(0)          // GitHub legacy watchers (equals stars for REST v3)
  subscribers_count Int      @default(0)          // “Watchers” (subscribers) used by UI fallback
  forks_count      Int       @default(0)
  branch_count     Int       @default(0)          // precomputed in ingestion
  tag_count        Int       @default(0)          // precomputed in ingestion
  open_prs_count   Int       @default(0)
  open_issues_count Int      @default(0)
  size_kb          Int       @default(0)          // GitHub repo.size returns KB; UI divides by 1024
  language         String?                           // main language
  license_name     String?                           // license?.name
  homepage         String?
  topics           String[]  @default([])           // used by the chips
  last_commit      DateTime?                         // latest commit timestamp

  // Relations
  commits          Commit[]

  @@unique([owner, name], map: "owner_name")
  @@index([updated_at])
  @@index([pushed_at])
}

model Commit {
  id           BigInt    @id @default(autoincrement())
  sha          String    @unique
  message      String?
  committed_at DateTime?
  repo_id      BigInt
  repo         Repo      @relation(fields: [repo_id], references: [id])

  author_login    String? 
  committer_login String?

  updated_at DateTime @default(now()) @updatedAt

  @@index([repo_id, committed_at])
}
